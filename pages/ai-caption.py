import streamlit as st
from PIL import Image
from transformers import BlipProcessor, BlipForConditionalGeneration
import torch

# Set page config at the very top
st.set_page_config(page_title="AI Image Caption Generator", layout="centered")

# Load the model and processor
@st.cache_resource
def load_model():
    processor = BlipProcessor.from_pretrained("Salesforce/blip-image-captioning-base")
    model = BlipForConditionalGeneration.from_pretrained("Salesforce/blip-image-captioning-base")
    return processor, model

processor, model = load_model()

st.title("üñºÔ∏è AI Image Caption Generator")
st.write("Upload an image and get a caption generated by AI!")
st.caption("This program is open source Develop by ismerio")
st.caption("Using transformers")
uploaded_file = st.file_uploader("Choose an image...", type=["jpg", "jpeg", "png"])

if uploaded_file is not None:
    image = Image.open(uploaded_file).convert("RGB")
    st.image(image, caption="Uploaded Image", use_container_width=True)

    with st.spinner("Generating caption..."):
        inputs = processor(images=image, return_tensors="pt")
        out = model.generate(**inputs, max_new_tokens=50)
        caption = processor.decode(out[0], skip_special_tokens=True)

    st.success(f"üìù Caption: **{caption}**")

st.write("---")
st.page_link("main.py",label="[‚¨ÖÔ∏è Back]")
